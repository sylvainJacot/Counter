{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/jacotstudio2020/src/components/02 Molecules/ctadefault.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { colorsRoles } from \"../01 Atoms/colors\";\nimport { IcArrow } from \"../01 Atoms/icons\";\nimport { transitions } from \"../01 Atoms/animations\";\nimport { media } from \"../01 Atoms/mediaqueries\";\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\ntransition: ${transitions.basic1};\n}\n`;\nexport const StyledLink = styled(NavLink)`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder: 1px solid ${colorsRoles.White};\nborder-radius: 8px;\n    ${media.desktop`\n    margin-top: 24px;\n    padding: 24px;\n    margin-bottom: 0px;\n    &:hover {\n            & svg {\n            margin-left: 32px;\n            transition: ${transitions.basic1};\n            }\n        }\n    `}\n\n`;\n\nconst CTADefault = props => {\n  return React.createElement(React.Fragment, null, React.createElement(StyledLink, {\n    to: props.pathName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.label, React.createElement(IcArrow, {\n    IconSize: \"24px\",\n    SizeBis: \"auto\",\n    FillColor: colorsRoles.White,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default CTADefault;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/jacotstudio2020/src/components/02 Molecules/ctadefault.js"],"names":["React","styled","NavLink","colorsRoles","IcArrow","transitions","media","Content","div","White","basic1","StyledLink","desktop","CTADefault","props","pathName","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,KAAR,QAAoB,0BAApB;AAEA,OAAO,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;;;SAGzBL,WAAW,CAACM,KAAM;;;;;;cAMbJ,WAAW,CAACK,MAAO;;CAT1B;AAcP,OAAO,MAAMC,UAAU,GAAGV,MAAM,CAACC,OAAD,CAAU;;;;;;;;oBAQtBC,WAAW,CAACM,KAAM;;MAEhCH,KAAK,CAACM,OAAQ;;;;;;;0BAOMP,WAAW,CAACK,MAAO;;;KAGvC;;CApBC;;AAwBP,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO,0CAEH,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,KAAK,CAACC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,KADX,EAEI,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAE,MADd;AAEI,IAAA,OAAO,EAAE,MAFb;AAGI,IAAA,SAAS,EAAEb,WAAW,CAACM,KAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFG,CAAP;AAeH,CAhBD;;AAmBA,eAAeI,UAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {NavLink} from \"react-router-dom\";\nimport {colorsRoles} from \"../01 Atoms/colors\";\nimport {IcArrow} from \"../01 Atoms/icons\";\nimport {transitions} from \"../01 Atoms/animations\";\nimport {media} from \"../01 Atoms/mediaqueries\";\n\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\ntransition: ${transitions.basic1};\n}\n`;\n\n\nexport const StyledLink = styled(NavLink)`\nposition: relative;\ndisplay: inline-block;\nwidth: fit-content;\nheight: fit-content;\npadding: 16px;\nmargin-top: 8px;\nmargin-bottom: 16px;\nborder: 1px solid ${colorsRoles.White};\nborder-radius: 8px;\n    ${media.desktop`\n    margin-top: 24px;\n    padding: 24px;\n    margin-bottom: 0px;\n    &:hover {\n            & svg {\n            margin-left: 32px;\n            transition: ${transitions.basic1};\n            }\n        }\n    `}\n\n`;\n\nconst CTADefault = (props) => {\n    return <>\n\n        <StyledLink to={props.pathName}>\n            <Content>\n                {props.label}\n                <IcArrow\n                    IconSize={\"24px\"}\n                    SizeBis={\"auto\"}\n                    FillColor={colorsRoles.White}\n                />\n            </Content>\n        </StyledLink>\n\n    </>\n\n};\n\n\nexport default CTADefault;"]},"metadata":{},"sourceType":"module"}